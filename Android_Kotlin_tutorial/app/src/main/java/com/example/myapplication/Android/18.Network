
Network
-> 통신

Database <-----> Server <-----> Client(app, web ,,)

Local Database 한계
- 동기화가 어려움 (ex 핸드폰, 테블릿 기기 사이 동기화)
- 상호작용 불가능 (ex 댓글 기능)

Client
= 사용자의 input을 서버에 전송

서버와 통신하는 방법
- 해당 URL로 요청함
- 인증정보를 보냄
- JSON 형식을 사용해서 data 보냄
- JSON: JavaScript Object Notation
    -> JavaScript에서 객체를 만들 때 사용하는 표현식

JSON 형식
- [] -> List
- {} -> 객체
- "" -> 문자열
- "" 없으면 숫자
    -> 문서에 적혀있음 - API 문서
        (Int, Double 등 숫자 타입 구분 불가)
JSON Response

JSON Parsing
-> JSON을 코틀린이나 자바가 이해할 수 있게 변화하는 과정

Serializable (직렬화)
-> 자바 시스템 내부에서 사용되는 object를 외부에서 사용할 수 있도록 byte 형태로 바꾸는 것

코틀린이나 자바가 이해할 수 있는 틀 = class


Request Type                    Status Code
- GET   ->  정보 요청           ->  200 OK
- POST  ->  정보 추가 요청       ->  201 Created
- DELETE    ->  정보 삭제 요청
- PUT   ->  정보 수정 요청

POST 보낼 때 타입은 서버가 정함

Header: Body를 읽기 전 상위에 있는 정보 (인증 정보, 요약본)
Body

Status Code
- 200번대는 보통 처리 성공

Library
- Volley: 구글 정식 developer web에 있음
- Retrofit
